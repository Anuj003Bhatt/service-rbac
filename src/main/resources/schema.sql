-- USERS
CREATE TABLE PLATFORM_USERS (
	user_id UUID PRIMARY KEY,
	username VARCHAR(50) UNIQUE NOT NULL,
	status BOOLEAN DEFAULT TRUE
);

-- ROLES
CREATE TABLE ROLES(
	role_id UUID PRIMARY KEY,
	role_name VARCHAR(50) NOT NULL,
	description VARCHAR(500)
);

-- PERMISSIONS
CREATE TABLE PERMISSIONS(
	permission_id UUID PRIMARY KEY,
	permission_name VARCHAR(50) UNIQUE NOT NULL,
	access_type CHAR DEFAULT 'R' CHECK(access_type IN ('C', 'R', 'U', 'D')),
	description VARCHAR(500)
);

-- ROLE_PERMISSION_ASSOCIATIONS: PERMISSIONS INSIDE A ROLE
CREATE TABLE ROLE_PERMISSION_ASSOCIATIONS(
	role_id UUID NOT NULL,
	permission_id UUID NOT NULL,
	UNIQUE(role_id, permission_id),

	PRIMARY KEY(role_id, permission_id),
	CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES ROLES(role_id) ON DELETE CASCADE,
	CONSTRAINT fk_permissions FOREIGN KEY (permission_id) REFERENCES PERMISSIONS(permission_id) ON DELETE CASCADE
);

-- USER_ROLES: ROLES ASSIGNED TO USERS
CREATE TABLE USER_ROLES (
	role_id UUID NOT NULL,
	user_id UUID NOT NULL,
	UNIQUE(role_id, user_id),

	PRIMARY KEY(role_id, user_id),
	CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES ROLES(role_id) ON DELETE CASCADE,
	CONSTRAINT fk_users FOREIGN KEY (user_id) REFERENCES PLATFORM_USERS(user_id) ON DELETE CASCADE
);

-- USER_GROUPS
-- USER_GROUPS CAN HAVE ROLES OR ROLE_GROUPS ASSIGNED TO ITSELF
CREATE TABLE USER_GROUPS (
    user_group_id UUID PRIMARY KEY,
    user_group_name VARCHAR(50) NOT NULL,
    description VARCHAR(500)
);

-- USER_GROUP_USERS: USER_GROUPS OF A USER
CREATE TABLE USER_GROUP_USERS (
    user_id UUID NOT NULL,
    user_group_id UUID NOT NULL,
    PRIMARY KEY(user_id, user_group_id),
    CONSTRAINT fk_users FOREIGN KEY (user_id) REFERENCES PLATFORM_USERS(user_id) ON DELETE CASCADE,
    CONSTRAINT fk_user_group FOREIGN KEY (user_group_id) REFERENCES USER_GROUPS(user_group_id) ON DELETE CASCADE
);

-- ROLE_GROUPS
CREATE TABLE ROLE_GROUPS (
    role_group_id UUID PRIMARY KEY,
    role_group_name VARCHAR(50) NOT NULL,
    description VARCHAR(500)
);

-- USER_ROLE_GROUP_ASSOCIATIONS: ROLES GROUPS A USER HAS
CREATE TABLE USER_ROLE_GROUP_ASSOCIATIONS(
     user_id UUID NOT NULL,
     role_group_id UUID NOT NULL,
     PRIMARY KEY(user_id, role_group_id),
     CONSTRAINT fk_role_group FOREIGN KEY (role_group_id) REFERENCES ROLE_GROUPS(role_group_id) ON DELETE CASCADE,
     CONSTRAINT fk_users FOREIGN KEY (user_id) REFERENCES PLATFORM_USERS(user_id) ON DELETE CASCADE
);

-- ROLE_GROUP_ROLES: ROLES THAT A ROLE GROUP HAS
CREATE TABLE ROLE_GROUP_ROLES (
    role_group_id UUID NOT NULL,
    role_id UUID NOT NULL,
    PRIMARY KEY(role_group_id, role_id),
    CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES ROLES(role_id) ON DELETE CASCADE,
    CONSTRAINT fk_role_group FOREIGN KEY (role_group_id) REFERENCES ROLE_GROUPS(role_group_id) ON DELETE CASCADE
);

-- USER_GROUP_ROLE_ASSOCIATIONS: ROLES THAT A USER GROUP HAS
CREATE TABLE USER_GROUP_ROLE_ASSOCIATIONS (
    user_group_id UUID NOT NULL,
    role_id UUID NOT NULL,
    PRIMARY KEY(user_group_id, role_id),
    CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES ROLES(role_id) ON DELETE CASCADE,
    CONSTRAINT fk_user_group FOREIGN KEY (user_group_id) REFERENCES USER_GROUPS(user_group_id) ON DELETE CASCADE
);

-- USER_GROUP_ROLE_GROUP_ASSOCIATIONS: ROLE GROUPS THAT A USER GROUP HAS
CREATE TABLE USER_GROUP_ROLE_GROUP_ASSOCIATIONS (
    user_group_id UUID NOT NULL,
    role_group_id UUID NOT NULL,
    PRIMARY KEY(user_group_id, role_group_id),
    CONSTRAINT fk_role_group FOREIGN KEY (role_group_id) REFERENCES ROLE_GROUPS(role_group_id) ON DELETE CASCADE,
    CONSTRAINT fk_user_group FOREIGN KEY (user_group_id) REFERENCES USER_GROUPS(user_group_id) ON DELETE CASCADE
);

------------------------------------------------------------------------
-- DELETE TABLE
------------------------------------------------------------------------
DROP TABLE USER_ROLE_GROUP_ASSOCIATIONS;
DROP TABLE USER_GROUP_ROLE_GROUP_ASSOCIATIONS;
DROP TABLE USER_GROUP_ROLE_ASSOCIATIONS;
DROP TABLE ROLE_PERMISSION_ASSOCIATIONS;
DROP TABLE USER_GROUP_USERS;
DROP TABLE USER_GROUPS;
DROP TABLE ROLE_GROUP_ROLES;
DROP TABLE ROLE_GROUPS;
DROP TABLE USER_ROLES;
DROP TABLE ROLES;
DROP TABLE PERMISSIONS;
DROP TABLE PLATFORM_USERS;